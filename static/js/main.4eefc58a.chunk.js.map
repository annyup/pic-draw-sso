{"version":3,"sources":["components/ClearButton.js","components/ColorButton.js","components/EraserButton.js","components/PostButton.js","components/GalleryButton.js","components/Slider.js","components/Buttons.js","firebase.js","components/Canvas.js","components/Gallery.js","App.js","serviceWorker.js","index.js"],"names":["ClearButton","props","className","onClick","class","ColorButton","getColor","e","color","currentTarget","value","this","htmlFor","name","id","type","onChange","Component","EraserButton","getEraser","PostButton","saveCanvas","GalleryButton","to","Slider","setSize","size","target","setState","state","min","max","Buttons","colorFunction","brushSize","eraserFunction","clearFunction","postFunction","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Canvas","handleResize","window","innerWidth","width","height","startDrawing","nativeEvent","isDrawing","draw","touch","touches","swipe","x","clientX","y","clientY","ctx","canvas","current","getContext","offsetX","offsetY","lineJoin","lineCap","mouseX","mouseY","lineTo","stroke","beginPath","moveTo","changedTouches","touchX","parseInt","touchY","stopDrawing","closePath","lineWidth","clearCanvas","clearRect","changeColor","selectedColor","strokeStyle","useEraser","selectedEraser","dataURL","toDataURL","console","log","database","ref","push","React","createRef","addEventListener","bind","removeEventListener","onMouseDown","onMouseUp","onMouseOut","onMouseMove","Gallery","drawingsArray","on","response","dataFromDb","val","arrayFromDb","key","drawingUrl","map","item","src","alt","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4eefc58a.chunk.js","sourcesContent":["// ClearButton.js\r\n\r\nimport React from \"react\";\r\n\r\nconst ClearButton = (props) => {\r\n    return (\r\n      <button className=\"button-style\" onClick={props.onClick}>\r\n        Clear\r\n        <i class=\"far fa-trash-alt\"></i>\r\n      </button>\r\n    );\r\n};\r\n\r\nexport default ClearButton;","// ColorButton.js\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass ColorButton extends Component {\r\n  // gets the hexcolor chosen by user\r\n  getColor = (e) => {\r\n    const color = e.currentTarget.value;\r\n\r\n    this.props.onClick(color);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button className=\"button-style\" onClick={this.props.onClick}>\r\n          <label htmlFor=\"choose-color\">\r\n          Color\r\n          </label>\r\n          <input\r\n            className=\"choose-color\"\r\n            name=\"choose-color\"\r\n            id=\"choose-color\"\r\n            type=\"color\"\r\n            onChange={this.getColor}\r\n            />\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorButton;","// EraserButton.js\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass EraserButton extends Component {\r\n    getEraser = () => {\r\n        const eraser = \"#FFFFFF\";\r\n        this.props.onClick(eraser);\r\n      };\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"button-style\" onClick={this.getEraser}>\r\n            Eraser\r\n            <i class=\"fas fa-eraser\"></i>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EraserButton;","// PostButton.js\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass PostButton extends Component {\r\n\r\n    saveCanvas = () => {\r\n        this.props.onClick();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"button-style\" onClick={this.saveCanvas}>\r\n            Save\r\n            <i class=\"far fa-save\"></i>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostButton;","// GalleryButton.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass GalleryButton extends Component {\r\n\r\n    render() {\r\n        return (         \r\n\r\n        <Link to=\"/gallery\">\r\n            <button className=\"button-style\">\r\n            Gallery\r\n            <i class=\"far fa-image\"></i>\r\n            </button>\r\n        </Link>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GalleryButton;","// Slider.js\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Slider extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            value: 1,\r\n        };\r\n\r\n    }\r\n\r\n    // Changes slider position and value\r\n    setSize = (e) => {\r\n        const size = e.target.value;\r\n        this.setState({value: size});\r\n\r\n        // Calls canvas brushSize to change brush size\r\n        this.props.onChange (size);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <button className=\"button-style\">\r\n                <input\r\n                    className=\"brush-slider\"\r\n                    type = \"range\"\r\n                    min = \"1\"\r\n                    max = \"50\"\r\n                    id = \"brush-slider\"\r\n                    value = {this.state.value}\r\n                    onChange = {this.setSize}/>\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Slider;","// Button.js\r\n\r\nimport React from 'react';\r\nimport ClearButton from './ClearButton.js';\r\nimport ColorButton from './ColorButton.js';\r\nimport EraserButton from './EraserButton.js';\r\nimport PostButton from './PostButton.js';\r\nimport GalleryButton from './GalleryButton.js';\r\nimport Slider from './Slider.js';\r\n\r\n\r\nconst Buttons = (props) => {\r\n    return (\r\n        <div className=\"button-container\">\r\n            <ColorButton onClick={props.colorFunction}/>\r\n            <Slider id='slider' onChange={props.brushSize}/>\r\n            <EraserButton onClick={props.eraserFunction}/>\r\n            <ClearButton onClick={props.clearFunction}/>\r\n            <PostButton onClick={props.postFunction}/>\r\n            <GalleryButton/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Buttons;","// firebase.js\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDEO2ba1uqXgGgxGfGyprWJ-WYnj3stdnA\",\r\n    authDomain: \"anny-pham-project-five.firebaseapp.com\",\r\n    databaseURL: \"https://anny-pham-project-five.firebaseio.com\",\r\n    projectId: \"anny-pham-project-five\",\r\n    storageBucket: \"anny-pham-project-five.appspot.com\",\r\n    messagingSenderId: \"968522599205\",\r\n    appId: \"1:968522599205:web:2703cb30469cf9be3ba8cc\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport Buttons from './Buttons.js';\r\nimport firebase from \"../firebase.js\";\r\n\r\nclass Canvas extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.isDrawing = false;\r\n\r\n        this.canvas = React.createRef();\r\n\r\n        this.state = {\r\n            width: 800,\r\n            height: 600,\r\n        };\r\n    }\r\n\r\n    // resizes when inner width of window changes\r\n    componentDidMount() {\r\n        this.handleResize();\r\n        window.addEventListener(\"resize\", this.handleResize.bind(this));\r\n    }\r\n\r\n    handleResize = () => {\r\n        if (window.innerWidth > 900) {\r\n        this.setState({ width: 800, height: 600 });\r\n        } else if (window.innerWidth <= 900 && window.innerWidth > 810) {\r\n        this.setState({ width: 750, height: 500 });\r\n        } else if (window.innerWidth <= 810 && window.innerWidth > 750) {\r\n            this.setState({ width: 700, height: 500 });\r\n        } else if (window.innerWidth <= 750 && window.innerWidth > 700) {\r\n            this.setState({ width: 600, height: 500 });\r\n        } else if (window.innerWidth <= 700 && window.innerWidth > 600) {\r\n            this.setState({ width: 500, height: 500 });\r\n        } else if (window.innerWidth <= 600 && window.innerWidth > 500) {\r\n            this.setState({ width: 450, height: 500 });\r\n        } else if (window.innerWidth <= 500 && window.innerWidth > 410) {\r\n            this.setState({ width: 380, height: 500 });\r\n        } else if (window.innerWidth <= 410 && window.innerWidth > 350) {\r\n            this.setState({ width: 300, height: 500 });\r\n        } else if (window.innerWidth <= 350) {\r\n            this.setState({ width: 280, height: 500 });\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.handleResize.bind(this));\r\n    }\r\n\r\n    // start & stop drawing functions\r\n    startDrawing = ({nativeEvent}) => {\r\n        this.isDrawing = true;\r\n        this.draw({nativeEvent})\r\n\r\n        // for tablet & mobile users\r\n        if (nativeEvent.type === \"touchstart\") {\r\n            this.isDrawing = true;\r\n            const touch = nativeEvent.touches[0];\r\n            this.swipe = {\r\n              x: touch.clientX,\r\n              y: touch.clientY,\r\n            };\r\n        }\r\n    }\r\n\r\n    draw = ({nativeEvent}) => {\r\n\r\n        this.ctx = this.canvas.current.getContext(\"2d\");\r\n        const {offsetX, offsetY} = nativeEvent;\r\n\r\n        this.ctx.lineJoin = \"round\";\r\n        this.ctx.lineCap = \"round\";\r\n        let mouseX = offsetX;\r\n        let mouseY = offsetY;\r\n\r\n        if (this.isDrawing) {\r\n            this.ctx.lineTo(mouseX, mouseY);\r\n            this.ctx.stroke();\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(mouseX, mouseY);\r\n        // for tablet & mobile users\r\n        } else if (nativeEvent.type === \"touchmove\" && this.isDrawing) {\r\n            const touch = nativeEvent.changedTouches[0];\r\n            let touchX = parseInt(touch.clientX - offsetX);\r\n            let touchY = parseInt(touch.clientY - offsetY);\r\n            this.ctx.lineTo(touchX, touchY);\r\n\r\n            this.ctx.stroke();\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(touchX, touchY);\r\n        }\r\n    }\r\n\r\n    stopDrawing = () => {\r\n        this.isDrawing = false;\r\n        this.ctx.beginPath();\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    // slider function for brush size\r\n    brushSize = (size) => {\r\n        this.ctx.lineWidth = size;\r\n    }\r\n\r\n    // clears the canvas\r\n    clearCanvas = () => {\r\n        this.ctx.clearRect(0, 0, this.state.width, this.state.height);\r\n    };\r\n\r\n    // changes color of the brush\r\n    changeColor = (selectedColor) => {\r\n        this.ctx.strokeStyle = selectedColor;\r\n    }\r\n\r\n    // changes to an eraser\r\n    useEraser = (selectedEraser) => {\r\n        this.ctx.strokeStyle = selectedEraser;\r\n    }\r\n\r\n    // grab the URL of the image and save it to firebase\r\n    saveCanvas = () => {\r\n        const dataURL = this.canvas.current.toDataURL();\r\n        console.log(dataURL);\r\n\r\n        const dbRef = firebase.database().ref();\r\n        dbRef.push(dataURL);\r\n        \r\n        // clear the canvas when user has submitted their drawing\r\n        this.clearCanvas();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <main className=\"wrapper\">\r\n                <section>\r\n                    <div className=\"canvas-header\">\r\n                        <h1>Pic-draw-sso</h1>\r\n                        <p>Can you be the next Picasso? Use the buttons on the side to get started on your art piece!</p>\r\n                    </div>\r\n                    <div className=\"canvas-button-container\">\r\n                        <Buttons\r\n                            colorFunction={this.changeColor}\r\n                            clearFunction={this.clearCanvas}\r\n                            eraserFunction={this.useEraser}\r\n                            postFunction={this.saveCanvas}\r\n                            id=\"slider\" brushSize={this.brushSize}\r\n                        />\r\n                        <div className='canvas-container'>\r\n                            <canvas\r\n                                id='canvas-draw'\r\n                                className='canvas'\r\n                                ref={this.canvas}\r\n                                width={this.state.width}\r\n                                height={this.state.height}\r\n                                onMouseDown={this.startDrawing}\r\n                                onMouseUp={this.stopDrawing}\r\n                                onMouseOut={this.stopDrawing}\r\n                                onMouseMove={this.draw}>\r\n                            </canvas>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Canvas;","// Gallery.js\r\n\r\nimport React, { Component } from 'react';\r\nimport firebase from '../firebase.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Gallery extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      drawingsArray: [],\r\n    }        \r\n  }\r\n\r\n  componentDidMount() {\r\n    const dbRef = firebase.database().ref();\r\n\r\n    // pulls drawings from firebase db and saves them in an array\r\n    dbRef.on('value', (response) => {\r\n      const dataFromDb = response.val();\r\n\r\n      const arrayFromDb = [];\r\n\r\n      // push each drawing into arrayFromDb array\r\n      for (let key in dataFromDb) {\r\n        arrayFromDb.push({\r\n            drawingUrl: dataFromDb[key],\r\n        })\r\n      }\r\n\r\n      this.setState ({\r\n        drawingsArray: arrayFromDb,\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"app-button\">\r\n          <Link to=\"/\">\r\n            <button className=\"button-style\">\r\n              back\r\n              <i class=\"fas fa-palette\"></i>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n\r\n        <div className=\"wrapper\">\r\n          <h1>Gallery</h1>\r\n          <p>Here is yours and other users' master pieces! Take a look!</p>\r\n\r\n          {\r\n            <div className=\"gallery-grid\">\r\n              {this.state.drawingsArray.map((item) => {\r\n                return (\r\n                  <div className=\"user-drawing\">\r\n                    <img src={item.drawingUrl} alt=\"Canvas drawing by a user\"></img>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          }\r\n      </div>\r\n      </div>             \r\n    );\r\n  }\r\n}\r\n\r\nexport default Gallery;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Canvas from './components/Canvas.js';\r\nimport Gallery from './components/Gallery.js';\r\nimport { \r\n  HashRouter as Router, \r\n  Route } from 'react-router-dom';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          \r\n          <Route exact path=\"/\" component={Canvas}/>\r\n          <Route path=\"/gallery\" component={Gallery}/>\r\n\r\n          <footer>\r\n            <div className=\"wrapper\">\r\n              <p>Copyright © Anny Pham 2020</p>\r\n            </div>\r\n          </footer>\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}